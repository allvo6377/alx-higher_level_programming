"""
This is a test for the matrix_mul function.

>>> import sys
>>> sys.path.insert(1, './')
>>> func = __import__('100-matrix_mul').matrix_mul
>>> m1 = [[1,2,3],[4,5,6],[7,8,9]]
>>> m2 = [[1,2],[4,5,6],[8,9]]
>>> m3 = [[1,2],[3,4],[5,6],[7,8]]
>>> m4 = [[1,-2,3],[4.5,5,""],[7,8,9]]
>>> m5 = [[1,2,3],[4,5,6.7],[7,8,9]]
>>> m6 = [[1,2,3,4,5,6,7],[8,9,10,11,12,13,14]]
>>> m7 = [1,2,3]
>>> m8 = []
>>> m9 = [[]]

# Type checks
>>> func("", m1)
Traceback (most recent call last):
...
TypeError: m_a must be a list
>>> func(9, m1)
Traceback (most recent call last):
...
TypeError: m_a must be a list
>>> func(6.7, m1)
Traceback (most recent call last):
...
TypeError: m_a must be a list
>>> func({}, m1)
Traceback (most recent call last):
...
TypeError: m_a must be a list
>>> func(set(), m1)
Traceback (most recent call last):
...
TypeError: m_a must be a list
>>> func(m1,"")
Traceback (most recent call last):
...
TypeError: m_b must be a list
>>> func(m1 , 9)
Traceback (most recent call last):
...
TypeError: m_b must be a list
>>> func(m1 , 9.9)
Traceback (most recent call last):
...
TypeError: m_b must be a list
>>> func(m1 , {})
Traceback (most recent call last):
...
TypeError: m_b must be a list
>>> func(m1 , set())
Traceback (most recent call last):
...
TypeError: m_b must be a list

# List of lists checks
>>> func(m7 ,m1)
Traceback (most recent call last):
...
TypeError: m_a must be a list of lists
>>> func(m1 ,m7)
Traceback (most recent call last):
...
TypeError: m_b must be a list of lists

# Value Errors
>>> func(m8 ,m1)
Traceback (most recent call last):
...
ValueError: m_a can't be empty

>>> func(m9 ,m1)
Traceback (most recent call last):
...
ValueError: m_a can't be empty

>>> func(m1 ,m8)
Traceback (most recent call last):
...
ValueError: m_b can't be empty

# Type Errors
>>> func(m4 ,m1)
Traceback (most recent call last):
...
