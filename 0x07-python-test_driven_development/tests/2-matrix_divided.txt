=============================
How to Use matrix_divided.py
=============================

This module defines a matrix division function ``matrix_divided(matrix, div)``.

Usage
=====

The function takes in a matrix (a list of lists of integers or floats) and a number (integer or float) and returns a new matrix with all elements divided by the number and rounded to 2 decimal places.

::

    >>> matrix_divided = __import__('matrix_divided').matrix_divided
    >>> matrix = [[1, 2], [3, 4]]
    >>> div = 2
    >>> matrix_divided(matrix, div)
    [[0.5, 1.0], [1.5, 2.0]]

Invalid Input
=============

The parameter ``matrix`` must be a list of lists of integers or floats. Otherwise, a TypeError is raised.

::

    >>> matrix = "not a matrix"
    >>> div = 2
    >>> matrix_divided(matrix, div)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Each row of the matrix must be the same size. Otherwise, a TypeError is raised.

::

    >>> matrix = [[1, 2], [3]]
    >>> div = 2
    >>> matrix_divided(matrix, div)
    Traceback (most recent call last):
        ...
    TypeError: Each row of the matrix must have the same size

The parameter ``div`` must be a number (integer or float). Otherwise, a TypeError is raised.

::

    >>> matrix = [[1, 2], [3, 4]]
    >>> div = "not a number"
    >>> matrix_divided(matrix, div)
    Traceback (most recent call last):
        ...
    TypeError: div must be a number

If ``div`` is equal to 0, a ZeroDivisionError is raised.

::

    >>> matrix = [[1, 2], [3, 4]]
    >>> div = 0
    >>> matrix_divided(matrix, div)
    Traceback (most recent call last):
        ...
    ZeroDivisionError: division by zero
